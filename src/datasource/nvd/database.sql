--
--  This file is part of cve-check-tool
--
-- Copyright Â© 2015-2016 Intel Corporation
--
-- cve-check-tool is free software; you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation; either version 2 of the License, or
-- (at your option) any later version.
--

-- Construct main tables if they don't exist
CREATE TABLE IF NOT EXISTS CVE_IDS (ID VARCHAR(13) UNIQUE PRIMARY KEY, SUMMARY TEXT, SCORE TEXT, MODIFIED INTEGER, VECTOR TEXT);
CREATE TABLE IF NOT EXISTS PRODUCTS (HASH INTEGER UNIQUE PRIMARY KEY, VENDOR TEXT, PRODUCT TEXT);
CREATE TABLE IF NOT EXISTS VERSIONS (HASH INTEGER UNIQUE PRIMARY KEY, PRODUCT_ID INTEGER, CVE_ID VARCHAR(13), VERSION TEXT);

-- Construct the main view if it doesn't exist
CREATE VIEW IF NOT EXISTS CVE_VIEW AS SELECT c.ID as CVE_ID, c.SUMMARY, c.MODIFIED, c.SCORE, c.VECTOR, p.HASH as PHASH, p.VENDOR, p.PRODUCT, v.VERSION, v.HASH as VHASH
FROM CVE_IDS c INNER JOIN VERSIONS v on c.ID = v.CVE_ID INNER JOIN PRODUCTS p ON v.PRODUCT_ID = p.HASH;

-- Create the trigger that we'll use instead of the view-insert operation
CREATE TRIGGER IF NOT EXISTS insert_cve_trigger INSTEAD OF INSERT ON CVE_VIEW
BEGIN
        -- Only update the CVE if the modified date is newer than what we have,
        -- likewise, only insert it if it doesn't exist
        INSERT OR REPLACE INTO CVE_IDS (ID, MODIFIED, SUMMARY, SCORE, VECTOR)
                SELECT NEW.CVE_ID, NEW.MODIFIED, NEW.SUMMARY, NEW.SCORE, NEW.VECTOR
        WHERE NOT EXISTS (SELECT 1 FROM CVE_IDS WHERE CVE_IDS.ID = NEW.CVE_ID AND NEW.MODIFIED < CVE_IDS.MODIFIED);

        -- Insert a product/vendor combo in by using it's unique hash
        INSERT INTO PRODUCTS (HASH, VENDOR, PRODUCT)
                SELECT NEW.PHASH, NEW.VENDOR, NEW.PRODUCT
        WHERE NOT EXISTS (SELECT 1 FROM PRODUCTS WHERE PRODUCTS.HASH = NEW.PHASH);

        -- Insert a version "hit" if it isn't already recorded. Puns.
        INSERT INTO VERSIONS (HASH, PRODUCT_ID, CVE_ID, VERSION)
                SELECT NEW.VHASH,
                NEW.PHASH,
                NEW.CVE_ID,
                NEW.VERSION
        WHERE NOT EXISTS (SELECT 1 FROM VERSIONS WHERE VERSIONS.HASH = NEW.VHASH);
END;

-- For testing only
-- INSERT INTO cve_insert VALUES ("CVE-2012-1234", "It hurt.", 12, "5.0", "Bad", 012345, "BadVendor", "BadProduct", "Version669293237", 1234);
-- INSERT INTO cve_insert VALUES ("CVE-2012-1234", "It hurt.", 12, "5.0", "Bad", 012345, "BadVendor", "BadProduct", "Version3", 9872);
